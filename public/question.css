/* import React, { useEffect, useState } from 'react';

import '../public/question.css'; // Import the CSS file for styling

function Question({
  question, difficulty, score, highscore, setScore
}) {
  const [shuffledDefinitions, setShuffledDefinitions] = useState([]);

  useEffect(() => {
    // Shuffle the definitions and incorrect definitions
    const allDefinitions = [question.definitions, ...question.incorrect_definitions];
    const shuffled = shuffleArray(allDefinitions);
    setShuffledDefinitions(shuffled);
  }, [question]);

  const shuffleArray = (array) => {
    const shuffledArray = [...array];
    for (let i = shuffledArray.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];
    }
    return shuffledArray;
  };

  const updateScore = (event) => {
    event.preventDefault();
    const newScore = score + 1;
    setScore(newScore);
    if (newScore > highscore) {
      axios.put('/law-quiz/highscores', { difficulty, score: newScore })
        .then(() => axios.get('/law-quiz/highscores'))
        .then((response) => {
          if (difficulty === 'Normal') {
            setHighscore(response.data[0].score);
          } else {
            setHighscore(response.data[1].score);
          }
          console.log('Highscore updated successfully');
        })
        .catch((err) => {
          console.error('Failed to update highscore ', err);
        });
    }
  };

  return (
    <div>
      <h2>{question.terms}</h2>
      {shuffledDefinitions.map((definition, index) => (
        <button key={index} className="definition-button">{definition}</button> // Add className for styling
      ))}
    </div>
  );
}
export default Question;
 */
.definition-button {
  display: block;
  width: 100%;
  padding: 10px 20px;
  margin: 5px 0;
  font-size: 16px;
  font-weight: bold;
  text-align: center;
  text-decoration: none;
  color: #ffffff;
  background-color: #3498db;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.correct {
  background-color: #4CAF50;
}

.incorrect {
  background-color: #f44336;
}

.definition-button:hover {
  background-color: #1f618d;
}

h2 {
  text-align: center;
}

form {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 30px;
}

.definition-input {
  width: 100%;
  height: 150px;
  padding: 10px;
  margin-bottom: 10px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 4px;
}

.submit-button {
  display: inline-block;
  padding: 10px 20px;
  font-size: 16px;
  font-weight: bold;
  text-align: center;
  text-decoration: none;
  color: #ffffff;
  background-color: #3498db;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.right {
  background-color: #4CAF50;
}

.wrong {
  background-color: #f44336;
}

.submit-button:hover {
  background-color: #1f618d;
}